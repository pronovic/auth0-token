[build-system]
requires = ["poetry-core (>=2.0.0)", "poetry-dynamic-versioning (>=1.5.2,<2.0.0)"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
requires-poetry = ">=2.0.0"
packages = [ { include="auth0token", from="src" } ]
include = [
   { path='Changelog', format='sdist' },
   { path='NOTICE', format='sdist' },
   { path='LICENSE', format='sdist' },
   { path='README.md', format='sdist' },
   { path='docs', format='sdist' },
]
classifiers = [
   "Development Status :: 4 - Beta",
]
version = "0.0.0"

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version=">=1.5.2,<2.0.0", extras=["plugin"] }

# Published version is managed using Git tags
# We get either the tag (like "0.24.1") or a snapshot-type version (like "0.24.1+3.e8319c4")
[tool.poetry-dynamic-versioning]
enable = true
pattern = '^[vV](?P<base>\d+\.\d+\.\d+)'  # this extracts the version from our vX.Y.Z tag format
format-jinja = "{% if distance == 0 and not dirty %}{{ base }}{% else %}{{ base }}+{{ distance }}.{{ commit }}{% endif %}"

[project]
name = "auth0-token"
requires-python = ">=3.11,<4"
description = "Auth0 JWT token utilities"
authors = [ { name="Kenneth J. Pronovici", email="pronovic@ieee.org" } ]
license = "Apache-2.0"
readme = "PyPI.md"
dynamic = [ "classifiers", "version" ]
dependencies = [
  "fastapi (>=0.103.2,<1.0.0)",
  "uvicorn (>=0.23.2,<1.0.0)",
  "python-dotenv (>=1.0.1,<2.0.0)",
  "click (>=8.1.7,<9.0.0)",
  "requests (>=2.32.3,<3.0.0)",
  "psutil (>=7.0.0,<8.0.0)",
  "environs (>=14.1.1,<15.0.0)",
  "selenium (>=4.29.0,<5.0.0)",
]

[project.urls]
homepage = "https://pypi.org/project/auth0-token/"
repository = "https://github.com/pronovic/auth0-token"

[tool.poetry.group.dev.dependencies]
pylint = ">=3.0.1,<4.0.0"
pre-commit = ">=4.0.1,<5.0.0"
mypy = ">=1.6.0,<2.0.0"
colorama = ">=0.4.6,<1.0.0"
types-requests = ">=2.32.0.20240914,<3.0.0.0"
types-psutil = ">=7.0.0.20250218,<8.0.0.0"
ruff = "^0.12.10"

[tool.poetry.scripts]
auth0token = "auth0token.cli:auth0token"

[tool.coverage.paths]
source = [ "src" ]

[tool.coverage.run]
branch = true
source = [ "src/auth0token" ]

[tool.coverage.report]
show_missing = false
precision = 1

[tool.pytest.ini_options]
filterwarnings = [
    'error',  # turn all Python warnings into test failures, so they're hard to miss
]

[tool.ruff]
src = ["src"]
extend-exclude = [ "docs", "notes", ".poetry" ]
line-length = 132
preview = true

[tool.ruff.format]
quote-style = "double"
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = 80

[tool.mypy]
files = [ "src" ]
pretty = true
show_absolute_path = true
show_column_numbers = true
show_error_codes = true
# Settings equivalent to strict=true as of v1.17.1
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
extra_checks = true
no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
# Additional settings above and beyond strict=true
implicit_optional = false
strict_optional = true
warn_no_return = true
warn_unreachable = true
